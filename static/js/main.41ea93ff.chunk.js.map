{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css"],"names":["Section","title","children","className","styles","section","Statistics","good","neutral","bad","total","positivePercentage","item","FeedbackOptions","options","onLeaveFeedback","map","option","btn","type","onClick","charAt","toUpperCase","slice","prototype","PropTypes","func","isRequired","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","feedback","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0OAeeA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAOC,QAA3B,UACE,6BAAKJ,IACJC,M,gBCmBUI,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,+BACE,qBAAIR,UAAWC,IAAOQ,KAAtB,kBAAkCL,KAClC,qBAAIJ,UAAWC,IAAOQ,KAAtB,qBAAqCJ,KACrC,qBAAIL,UAAWC,IAAOQ,KAAtB,iBAAiCH,KACjC,qBAAIN,UAAWC,IAAOQ,KAAtB,mBAAmCF,KACnC,qBAAIP,UAAWC,IAAOQ,KAAtB,+BAA+CD,EAA/C,a,gCCRO,SAASE,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAU,mCACPD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEd,UAAWC,IAAOc,IAElBC,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,EAAOI,OAAO,GAAGC,cAAgBL,EAAOM,MAAM,IAJ1CN,QAWbJ,EAAgBW,UAAY,CAC1BjB,KAAMkB,IAAUC,KAAKC,WACrBnB,QAASiB,IAAUC,KAAKC,WACxBlB,IAAKgB,IAAUC,KAAKC,Y,oBCXPC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAI1B,UAAWC,IAAOH,MAAtB,SAA8B4B,KCEjB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAkBMC,EAAqB5B,EAAOC,EAAUC,EACtC2B,EAAkCC,KAAKC,MACxC/B,EAAO4B,EAAsB,KAE5BrB,EAAUyB,OAAOC,KAAK,CAAEjC,OAAMC,UAASC,QAE7C,OACI,qCACE,cAAC,EAAD,CAASR,MAAM,6BAAf,SACE,cAACY,EAAD,CACEC,QAASA,EACTC,gBA3Ba,SAAC0B,GACtB,OAAQA,GACN,IAAK,OAEH,YADAT,GAAQ,SAAAU,GAAS,OAAIA,EAAY,KAEnC,IAAK,UAEH,YADAT,GAAW,SAAAS,GAAS,OAAIA,EAAY,KAEtC,IAAK,MAEH,YADAR,GAAO,SAAAQ,GAAS,OAAIA,EAAY,KAElC,QACE,aAmBA,cAAC,EAAD,CAASzC,MAAM,aAAf,SACGkC,EACC,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,EACPxB,mBAAoByB,IAGtB,cAAC,EAAD,CAAcP,QAAQ,2BC9ClCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,IAAM,+B,kBCAxBD,EAAOC,QAAU,CAAC,MAAQ,+B","file":"static/js/main.41ea93ff.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <ul>\n        <li className={styles.item}>Good:{good}</li>\n        <li className={styles.item}>Neutral:{neutral}</li>\n        <li className={styles.item}>Bad:{bad}</li>\n        <li className={styles.item}>Total:{total}</li>\n        <li className={styles.item}>Positive feedback:{positivePercentage}%</li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (  <>\n    {options.map((option) => (\n      <button\n        className={styles.btn}\n        key={option}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option.charAt(0).toUpperCase() + option.slice(1)}\n      </button>\n    ))}\n  </>)\n\n};\n\nFeedbackOptions.prototype = {\n  good: PropTypes.func.isRequired,\n  neutral: PropTypes.func.isRequired,\n  bad: PropTypes.func.isRequired,\n};\n\n","import PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <h3 className={styles.title}>{message}</h3>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from \"react\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleFeedback = (feedback) => {\n    switch (feedback) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        return;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        return;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        return;\n      default:\n        return;\n    };\n  };\n\n  const countTotalFeedback = good + neutral + bad;\n  const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100\n  );\n  const options = Object.keys({ good, neutral, bad });\n  \n  return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={handleFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2PbrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2_pg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__QsMda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3nI_r\"};"],"sourceRoot":""}